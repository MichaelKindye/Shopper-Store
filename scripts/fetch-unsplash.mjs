import fs from 'fs'
import path from 'path'

// This script no longer performs live calls to the Unsplash API. Instead it
// looks for a locally-created `tmp_unsplash_results.json` (created previously
// when you ran the fetch script with your key outside the repository) and
// converts that JSON into a committed `src/mock/pinnedImages.ts` module.
//
// Usage: run this file from the project root.

const tmp = path.join(process.cwd(), 'tmp_unsplash_results.json')
const outFile = path.join(process.cwd(), 'src', 'mock', 'pinnedImages.ts')

if (!fs.existsSync(tmp)) {
  console.error('tmp_unsplash_results.json not found. Run your offline Unsplash fetch externally (with a private key) and place the file at the project root.')
  process.exit(2)
}

const raw = fs.readFileSync(tmp, 'utf8')
let data
try {
  data = JSON.parse(raw)
} catch (err) {
  console.error('failed to parse tmp_unsplash_results.json', err && err.message)
  process.exit(2)
}

// Build TypeScript module content
const header = `// This file was generated by scripts/fetch-unsplash.mjs from tmp_unsplash_results.json
// It contains a static mapping of product title -> pinned image URL (or null).
export const pinnedUnsplash: Record<string, string | null> = `

const content = header + JSON.stringify(data, null, 2) + '\n\nexport default pinnedUnsplash\n'

fs.writeFileSync(outFile, content, 'utf8')
console.log('Wrote', outFile)
